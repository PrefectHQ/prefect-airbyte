{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"prefect-airbyte Welcome! prefect-airbyte is a collections of prebuilt Prefect tasks that can be used to quickly construct Prefect flows. Getting Started Python setup Requires an installation of Python 3.7+ We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv. These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation . Installation Install prefect-airbyte pip install prefect-airbyte Airbyte setup Write and run a flow from prefect import flow from prefect.context import get_run_context from prefect_airbyte import trigger_sync @flow def airbyte_connection () -> : pass Resources If you encounter and bugs while using prefect-airbyte , feel free to open an issue in the prefect-airbyte repository. If you have any questions or issues while using prefect-airbyte , you can find help in either the Prefect Discourse forum or the Prefect Slack community Development If you'd like to install a version of prefect-airbyte for development, first clone the repository and then perform an editable install with pip : git clone https://github.com/PrefectHQ/prefect-airbyte.git cd prefect-airbyte/ pip install -e \".[dev]\"","title":"Home"},{"location":"#prefect-airbyte","text":"","title":"prefect-airbyte"},{"location":"#welcome","text":"prefect-airbyte is a collections of prebuilt Prefect tasks that can be used to quickly construct Prefect flows.","title":"Welcome!"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#python-setup","text":"Requires an installation of Python 3.7+ We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv. These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation .","title":"Python setup"},{"location":"#installation","text":"Install prefect-airbyte pip install prefect-airbyte","title":"Installation"},{"location":"#airbyte-setup","text":"","title":"Airbyte setup"},{"location":"#write-and-run-a-flow","text":"from prefect import flow from prefect.context import get_run_context from prefect_airbyte import trigger_sync @flow def airbyte_connection () -> : pass","title":"Write and run a flow"},{"location":"#resources","text":"If you encounter and bugs while using prefect-airbyte , feel free to open an issue in the prefect-airbyte repository. If you have any questions or issues while using prefect-airbyte , you can find help in either the Prefect Discourse forum or the Prefect Slack community","title":"Resources"},{"location":"#development","text":"If you'd like to install a version of prefect-airbyte for development, first clone the repository and then perform an editable install with pip : git clone https://github.com/PrefectHQ/prefect-airbyte.git cd prefect-airbyte/ pip install -e \".[dev]\"","title":"Development"},{"location":"connections/","text":"prefect_airbyte.connections Tasks for managing airbyte connections trigger_sync ( connection_id ) async Triggers a manual sync of a defined Airbyte connection Parameters: Name Type Description Default connection_id str The ID of the connection defined in Airbyte (found in URL) required Returns: Type Description Dict TODO Examples: TODO from prefect import flow from prefect.context import get_run_context @flow def trigger_airbyte_sync (): pass Source code in prefect_airbyte/connections.py @task async def trigger_sync ( connection_id : str ) -> Dict : \"\"\" Triggers a manual sync of a defined Airbyte connection Args: connection_id: The ID of the connection defined in Airbyte (found in URL) Returns: Dict: TODO Examples: TODO ```python from prefect import flow from prefect.context import get_run_context @flow def trigger_airbyte_sync(): pass ``` \"\"\" # noqa pass","title":"Connections"},{"location":"connections/#prefect_airbyte.connections","text":"Tasks for managing airbyte connections","title":"connections"},{"location":"connections/#prefect_airbyte.connections.trigger_sync","text":"Triggers a manual sync of a defined Airbyte connection Parameters: Name Type Description Default connection_id str The ID of the connection defined in Airbyte (found in URL) required Returns: Type Description Dict TODO Examples: TODO from prefect import flow from prefect.context import get_run_context @flow def trigger_airbyte_sync (): pass Source code in prefect_airbyte/connections.py @task async def trigger_sync ( connection_id : str ) -> Dict : \"\"\" Triggers a manual sync of a defined Airbyte connection Args: connection_id: The ID of the connection defined in Airbyte (found in URL) Returns: Dict: TODO Examples: TODO ```python from prefect import flow from prefect.context import get_run_context @flow def trigger_airbyte_sync(): pass ``` \"\"\" # noqa pass","title":"trigger_sync()"}]}